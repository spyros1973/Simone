--hashes used
local MSG_CONFIG = hash("config")
local MSG_TRIGGER_RESPONSE = hash("trigger_response")
local MSG_PLAY = hash("play")
local MSG_ACTIVATE = hash("activate")

local function play_hit_anim(self)
	go.animate(".","scale.x", go.PLAYBACK_ONCE_PINGPONG, 1.5, go.EASING_INCUBIC, 0.2)
	go.animate(".","scale.y", go.PLAYBACK_ONCE_PINGPONG, 1.5, go.EASING_INCUBIC, 0.2)
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.mouse_pressed=false
	self.my_parent=nil
	self.active=false
		
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id==MSG_ACTIVATE then
		self.active=true
	end
	
	if message_id==MSG_CONFIG then
		self.my_parent=sender
		msg.post("#sprite", "play_animation", {id = hash(message.sprite)})
		self.order=message.order
		self.sound=message.sound
	end

	if message_id==MSG_PLAY then
		print("play message received on "..tostring(self))
		msg.post("/sound_manager", "play_sample",{sample=self.sound})
		play_hit_anim(self)
	end	

	if self.active==false then 
		return 
	end
		
	if message_id==MSG_TRIGGER_RESPONSE and message.other_id==hash("/cursor") and self.mouse_pressed then
		--print ("collison with cursor")
		msg.post("/sound_manager", "play_sample",{sample=self.sound})
		play_hit_anim(self)
		msg.post(self.my_parent, "hit", {order = self.order})
		--go.delete()
		--print (message.other_id)
	end
end

function on_input(self, action_id, action)	
	if action_id == hash("touch") then
		if action.pressed then
			self.mouse_pressed=true
		end
		if action.released then
			self.mouse_pressed=false
		end		
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
