local settings=require("settings")

function init(self)
	settings.load()	
	self.controller_states={menu=true,game=false,gameover=false}
	msg.post("@render:", "use_stretch_projection", { near = -1, far = 1 })
	--msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
	--msg.post("@render:", "use_fixed_projection", { near = -1, far = 1, zoom = 2 })
	math.randomseed(os.time())
	math.random();math.random();math.random(); -- discard first few random numbers
	print("startup url: "..msg.url())
	msg.post("handler#menu", "load")
	--msg.post("handler#gamewon", "load")
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

local function unload_collection(self,name)
	if self.controller_states[name] then 
		msg.post("handler#"..name, "unload") 
		self.controller_states[name]=false
	end
end

function on_message(self, message_id, message, sender)
	if(message_id == hash("show_game")) then
		unload_collection(self,"menu")
		unload_collection(self,"gameover")
		self.controller_states["game"]=true
		msg.post("handler#game", "load")
	elseif(message_id == hash("show_menu")) then
		unload_collection(self,"game")
		unload_collection(self,"gameover")		
		self.controller_states["menu"]=true
		msg.post("handler#menu", "load")
	elseif(message_id == hash("show_gameover")) then
		unload_collection(self,"menu")
		unload_collection(self,"game")
		self.controller_states["gameover"]=true
		msg.post("handler#gameover", "load")	
	elseif message_id == hash("proxy_loaded") then	
		msg.post(sender, "init")
		msg.post(sender, "enable")	
	end
end


function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
